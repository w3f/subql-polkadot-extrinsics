#This file is still here just to make the codegen works
specVersion: 1.0.0
name: polkadot-staking
version: 1.0.2
runner:
  node:
    name: '@subql/node'
    version: '>=1.0.0'
  query:
    name: '@subql/query'
    version: '*'
description: This projects collects all Polkadot extrinsics.
repository: 'https://github.com/w3f/subql-polkadot-extrinsics'
schema:
  file: ./schema.graphql
network:
  chainId: '0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3'
  endpoint: 'wss://polkadot.api.onfinality.io/public-ws'
dataSources:
  - kind: substrate/Runtime
    startBlock: 1
    mapping:
      file: ./dist/index.js
      handlers:
        - handler: handleExtrinsic
          kind: substrate/CallHandler
        #Rewards and Staking  
        - handler: handleBond
          kind: substrate/EventHandler
          filter:
            module: staking
            method: Bonded
        - handler: handleReward
          kind: substrate/EventHandler
          filter:
            module: staking
            method: Reward
        - handler: handleRewarded
          kind: substrate/EventHandler
          filter:
            module: staking
            method: Rewarded
        - handler: handleSlash
          kind: substrate/EventHandler
          filter:
            module: staking
            method: Slash
        - handler: handleSlashed
          kind: substrate/EventHandler
          filter:
            module: staking
            method: Slashed
        - handler: handleStakingReward
          kind: substrate/EventHandler
          filter:
            module: staking
            method: Reward
        - handler: handleStakingRewarded
          kind: substrate/EventHandler
          filter:
            module: staking
            method: Rewarded
        - handler: handleStakingSlash
          kind: substrate/EventHandler
          filter:
            module: staking
            method: Slash
        - handler: handleStakingSlashed
          kind: substrate/EventHandler
          filter:
            module: staking
            method: Slashed  
        #Transfers and Calls   
        - handler: handleBatchCall
          kind: substrate/CallHandler
          filter:
            module: utility
            method: batchAll
            success: true
        - handler: handleBatchCall
          kind: substrate/CallHandler
          filter:
            module: utility
            method: batch
            success: true
        - handler: handleTransfer
          kind: substrate/EventHandler
          filter:
            module: balances
            method: Transfer 
        - handler: handleSetController
          kind: substrate/CallHandler
          filter:
            module: staking
            method: setController
            success: true
        - handler: handleSetController
          kind: substrate/CallHandler
          filter:
            module: staking
            method: bond
            success: true